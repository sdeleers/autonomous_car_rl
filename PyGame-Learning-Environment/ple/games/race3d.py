from OpenGL.GL import *
from OpenGL.GLU import *
import numpy as np
import convexhull
import math
from scipy.interpolate import splprep, splev
from svg.path import parse_path, Path, Line, Arc, CubicBezier, QuadraticBezier
import util
import polygon


def perpendicular(v):
    p = [-v[1], v[0]]
    return np.array(p)


def normalize(v):
    return v/np.linalg.norm(v)


def rotate_vector(v, degrees):
    angle_rad = np.deg2rad(degrees)
    r = [v[0]*np.cos(angle_rad) - v[1]*np.sin(angle_rad), v[0]*np.sin(angle_rad) + v[1]*np.cos(angle_rad)]
    return normalize(r)


class Track(object):
    # perp_grad is a unit vector, perpendicular to the gradient of the track
    def __init__(self, width, positions, gradients):
        self.width = width
        self.positions = positions
        self.gradients = gradients
        self.length = len(positions)
        self.perp_gradients = np.zeros((self.length, 2))
        for i in range(self.length):
            perp_grad = normalize(perpendicular(self.gradients[i]))
            self.perp_gradients[i, :] = perp_grad


def draw_track(track):
    glBegin(GL_QUAD_STRIP)
    glColor3f(0.5, 0.5, 0.5)
    z = 0
    for i in range(track.length):
        pos = track.positions[i]
        perp_grad = track.perp_gradients[i]
        x = pos[0]+track.width/2*perp_grad[0]
        y = pos[1]+track.width/2*perp_grad[1]
        glVertex3f(x, y, z)

        x = pos[0]-track.width/2*perp_grad[0]
        y = pos[1]-track.width/2*perp_grad[1]
        glVertex3f(x, y, z)
    glEnd()


def circular_car_off_track(car_pos, track):
    squared_distances = []
    for i in range(track.length):
        track_pos = track.positions[i]
        squared_dist = sum((np.array(track_pos)-np.array(car_pos))**2)
        squared_distances.append(squared_dist)
    if min(squared_distances) > (track.width/2)**2:
        return True
    else:
        return False


def generate_circular_track(track_width, env_width, env_height):
    no_points = 500
    points = np.zeros((no_points, 2))
    for i in range(no_points):
        points[i] = [np.cos(2*np.pi/500*i), np.sin(2*np.pi/500*i)]

    # flip points so that the x-axis is the widest
    if np.argmax(np.max(points, axis=0)) == 0:
        points = np.fliplr(points)

    # Translate points so that minimum of track's bounding box is at the origin
    points_min = np.min(points, axis=0)
    points -= points_min

    # Scale points so that track fits in environment
    points_max = np.max(points, axis=0)
    for point in points:
        point[0] /= points_max[0] / env_height
        point[1] /= points_max[1] / env_width

    # Find new track length because it changed after scaling. We need the correct track length because otherwise the
    # different tracks will not have the same distance between reward segments and this will cause some tracks to be
    # easier to get high rewards on.
    track_length = 0
    for i in range(no_points):
        if i > 0:
            track_length += np.linalg.norm(points[i] - points[i - 1])
    no_points = int(track_length / 5)

    tck, u = splprep(points.T, u=None, s=0.0, per=1)
    u_new = np.linspace(u.min(), u.max(), no_points)
    x_new, y_new = splev(u_new, tck, der=0)
    x_der, y_der = splev(u_new, tck, der=1)

    track_positions = np.zeros((len(u_new), 2))
    track_gradients = np.zeros((len(u_new), 2))
    for i in range(len(u_new)):
        track_positions[i] = [x_new[i], y_new[i]]
        track_gradients[i] = normalize([x_der[i], y_der[i]])
    return Track(track_width, track_positions, track_gradients)

def get_current_track_segment(car_pos, track):
    squared_distances = []
    for i in range(track.length):
        track_pos = track.positions[i]
        squared_dist = sum((np.array(track_pos)-np.array(car_pos))**2)
        squared_distances.append(squared_dist)
    return np.argmin(squared_distances)

def generate_track_from_svg_path(path, track_width, env_width, env_height):
    no_points = int(path.length()/10)
    points = np.zeros((no_points, 2))
    for i in range(no_points):
        point = path.point(0.0 + float(i) / (no_points - 1))
        points[i] = [point.real, point.imag]

    # flip points so that the x-axis is the widest
    if np.argmax(np.max(points, axis=0)) == 0:
        points = np.fliplr(points)

    # Translate points so that minimum of track's bounding box is at the origin
    points_min = np.min(points, axis=0)
    points -= points_min

    # Scale points so that track fits in environment
    points_max = np.max(points, axis=0)
    for point in points:
        point[0] /= points_max[0]/env_height
        point[1] /= points_max[1]/env_width

    # Find new track length because it changed after scaling. We need the correct track length because otherwise the
    # different tracks will not have the same distance between reward segments and this will cause some tracks to be
    # easier to get high rewards on.
    track_length = 0
    for i in range(no_points):
        if i > 0:
            track_length += np.linalg.norm(points[i] - points[i - 1])
    no_points = int(track_length/5)

    tck, u = splprep(points.T, u=None, s=0.0, per=1)
    u_new = np.linspace(u.min(), u.max(), no_points)
    x_new, y_new = splev(u_new, tck, der=0)
    x_der, y_der = splev(u_new, tck, der=1)

    track_positions = np.zeros((len(u_new), 2))
    track_gradients = np.zeros((len(u_new), 2))
    for i in range(len(u_new)):
        track_positions[i] = [x_new[i], y_new[i]]
        track_gradients[i] = normalize([x_der[i], y_der[i]])
    return Track(track_width, track_positions, track_gradients)

svg_tracks = ["m 479.3375,188.98116 c -16.4775,-4.83863 -31.8229,-11.57114 -48.2555,-16.86981 -9.1991,-2.96623 -18.6343,-7.3278 -27.9333,-6.98332 -14.1603,0.52456 -29.4468,4.65239 -42.1531,11.21761 -79.9449,41.30655 -165.96369,82.66642 -242.36779,119.09226 -11.9584,5.70119 -21.576398,25.50277 -15.7081,37.83196 0,0 14.2349,29.90775 21.3524,44.86163 2.5309,5.31748 5.0232,10.65494 7.6556,15.92235 3.5605,7.12435 11.1312,14.135 17.104,18.71272 5.001,3.833 11.5683,6.56408 17.2732,9.06 5.1332,2.24576 10.7451,3.79275 16.2572,4.74168 5.6786,0.97759 23.56939,8.73144 26.20629,11.19799 6.4936,6.07405 14.0501,12.00685 17.9927,20.03342 30.9677,63.04605 62.7991,132.01826 94.3356,193.22988 3.958,7.68249 17.2616,12.49881 25.2841,8.63218 28.5363,-13.75384 57.0727,-27.50768 85.609,-41.26152 13.5453,-6.52847 39.3143,-0.23765 46.0703,12.95167 16.1814,31.58982 32.3628,63.17965 48.5443,94.76947 3.5706,6.97063 16.3688,5.94446 23.3467,2.64366 66.8631,-31.62864 136.5541,-65.87299 204.6881,-99.0791 7.062,-3.44177 13.6204,-7.89547 20.7438,-11.19148 13.601,-6.29315 27.8874,-4.26953 41.4292,-2.51086 18.6808,2.42609 36.593,12.09262 55.23884,15.06514 10.2291,1.63072 22.8867,4.81427 31.3857,-1.25543 9.2738,-6.62309 17.4162,-6.25084 23.2254,-2.82471 129.87396,76.59601 262.83336,156.75053 389.69356,228.05715 12.8665,7.23214 30.8407,-8.18965 25.1085,-19.45913 -17.3075,-34.02654 -36.3773,-74.39738 -58.8882,-110.67465 -6.0491,-9.74837 -15.7796,-17.67452 -26.364,-22.28385 -41.3066,-17.98837 -85.4093,-31.71247 -127.7397,-48.02011 -8.7236,-3.36073 -22.7449,-9.33627 -29.1888,-16.0067 -23.2323,-24.04903 -44.7315,-45.41485 -66.5377,-69.9901 -4.5578,-5.13654 -5.5936,-16.28554 -2.197,-21.65614 12.2609,-19.38684 21.1687,-34.65998 35.4658,-54.29725 7.8773,-10.8195 21.1102,-16.12958 33.2689,-22.28385 6.1721,-3.12411 13.162,-4.53978 19.8403,-6.49287 18.0469,-5.27788 39.3644,-9.47003 54.9139,-13.66484 33.2746,-8.9766 16.7638,-32.2459 -3.319,-38.66255 C 950.15864,341.06263 711.0836,265.31584 484.1238,190.39351"]
# "m 222.35988,236.87011 c 14.5321,13.70588 29.06419,27.41177 43.59629,41.11765 2.26522,2.13643 5.67791,5.02089 4.80606,8.01011 -0.74761,2.56323 -0.6408,5.55367 -2.24282,7.6897 -6.08768,8.1169 -17.34445,14.24625 -18.26304,24.35071 -0.42721,4.69926 -1.46298,9.38263 -1.28162,14.09779 0.1068,2.77684 1.12857,10.98929 0.32041,8.33051 -0.0318,-0.10451 -0.11456,-0.42105 -0.0953,-0.31353 2.48925,13.8935 8.52529,27.48483 14.6091,40.42983 14.30098,30.42931 29.50703,60.7677 46.54527,89.69308 7.31026,12.41044 16.50144,23.99306 26.50023,34.3144 11.06549,11.42244 24.05291,21.18768 36.69262,30.91693 4.57411,3.52086 9.72831,6.35293 14.94885,8.83341 15.2775,7.25892 30.54719,15.11484 46.54527,20.38479 12.88038,4.24295 26.61643,6.136 40.09009,8.15391 19.04158,2.85179 38.22826,5.40174 57.45563,6.4552 8.50011,0.46572 17.001,0.91766 25.50034,1.39715 8.01087,0.45194 16.02018,0.93144 24.03027,1.39716 3.46266,0.20132 7.38603,-1.43155 9.93252,-3.52446 2.46059,-2.02232 6.71072,-8.44971 9.08871,-10.82124 7.67567,-7.65479 15.19057,-13.70285 23.07228,-21.25771 4.09263,-3.92291 10.62802,-9.61796 14.85075,-13.17561 2.38462,-2.00904 5.84184,-3.35176 8.97132,-3.52445 6.41345,-0.35391 13.08944,1.48555 19.65748,1.94464 43.96949,3.07338 84.46714,6.1809 128.16144,12.23087 15.1951,2.10394 30.5409,6.15631 44.5067,12.23087 13.8934,6.04307 26.7879,15.01608 39.0709,24.12201 43.3222,32.11665 85.52951,65.93171 127.74467,99.54572 6.142,4.8906 13.2987,12.01346 17.4969,17.8367 1.1323,1.5706 -0.2137,4.42443 -1.3354,6.21339 -20.8407,33.23758 -39.48004,62.14634 -61.34778,94.86119 -6.67095,9.97996 -12.46264,21.43577 -21.06428,29.2182 -5.66771,5.12793 -14.22332,8.12256 -21.74378,9.5129 -5.95615,1.10114 -12.92568,0.329 -18.68605,-2.03848 -37.50068,-15.41258 -73.81917,-35.14442 -111.09711,-51.30172 -2.6989,-1.16978 -6.35477,-1.71227 -8.83341,-0.6795 -2.95731,1.23221 -6.55335,4.26774 -7.47442,7.47443 -2.13665,7.4387 -0.90317,16.32909 -1.69874,24.46175 -1.24287,12.70513 -2.15891,25.58852 -4.4167,38.0516 -0.57341,3.16526 -1.99769,6.4509 -4.077,8.83341 -3.35669,3.84618 -8.1761,6.5413 -12.2308,9.85265 -2.7402,2.23784 -4.98389,5.57573 -8.1539,6.79493 -4.19119,1.61194 -9.2828,1.9522 -13.9297,1.69873 -14.0392,-0.76577 -28.1674,-2.59618 -42.12852,-4.75645 -35.07556,-5.4274 -70.00643,-11.89705 -104.98167,-18.00656 -80.42532,-14.04878 -160.81984,-28.27546 -241.22002,-42.46831 -36.35937,-6.41843 -72.85471,-12.37517 -109.05862,-19.36555 -3.09343,-0.59729 -8.20602,-0.20474 -12.57062,-4.75646 -4.66531,-4.86532 -4.97575,-14.29289 -4.41671,-21.74377 0.65476,-8.72676 -1.59183,-17.12537 -6.79493,-24.46175 -6.12178,-8.63171 -14.63462,-16.48887 -23.44251,-22.42327 -7.16019,-4.82424 -16.10011,-7.31674 -24.46175,-9.85265 -5.45471,-1.6543 -11.29715,-2.01862 -16.98732,-2.71797 -14.58137,-1.79212 -29.37047,-2.20321 -43.8273,-4.75645 -32.994427,-5.82718 -65.762797,-13.26225 -98.52648,-20.38479 -6.307168,-1.37112 -12.60258,-2.94656 -18.68606,-5.0962 -25.96594,-9.17524 -51.760607,-18.95407 -77.46221,-28.87845 -8.6128,-3.32573 -17.16297,-6.87284 -25.48098,-10.87189 -15.23774,-7.32584 -31.14732,-14.19342 -45.18629,-23.10276 -3.62785,-2.30229 -6.82039,-6.68123 -7.81417,-10.53214 -0.8182,-3.17052 0.81731,-7.3644 2.37823,-10.53214 2.28954,-4.64643 6.10472,-8.61456 9.17315,-12.91037 4.85898,-6.80258 11.12193,-12.92762 14.6091,-20.38479 3.87401,-8.28442 6.29161,-17.73224 7.47443,-26.83998 1.08215,-8.33258 1.2751,-17.42567 -0.6795,-25.48098 -1.78262,-7.34653 -6.29622,-14.26784 -10.53214,-20.72454 -7.42871,-11.32337 -16.25676,-21.78251 -24.46175,-32.61566 -6.29086,-8.30591 -12.9345,-16.35674 -19.0258,-24.8015 -1.9373,-2.6858 -4.46845,-5.53346 -5.02836,-8.75603 -0.96291,-5.54198 -1.12685,-11.80661 0.27191,-17.40445 6.57053,-26.29528 14.23311,-52.89507 24.122,-78.14169 5.05996,-12.91823 13.10623,-24.69029 20.72454,-36.35288 10.728,-16.42312 24.80995,-30.82492 34.31439,-47.90426 10.84968,-19.49673 17.02935,-41.717 27.426782,-60.89743 2.344975,-4.32584 7.477182,-8.42904 12.014121,-9.08693 6.385552,-0.92595 13.982138,1.79103 21.033977,2.03506 8.122541,0.28108 16.516827,-0.0773 24.46175,-1.69873 8.702657,-1.77607 17.39178,-4.74612 25.48099,-8.49366 11.9558404,-5.53886 22.508168,-14.49417 34.65414,-19.36555 9.031558,-3.62228 19.15111,-4.89952 28.87845,-6.11544 9.29846,-1.16231 18.86993,-1.66061 28.19896,-1.01924 8.79079,0.60437 17.73052,2.21591 26.16048,4.75645 8.10437,2.44241 16.43315,5.46108 23.44251,10.1924 15.64041,10.55728 30.42165,22.94458 44.50679,35.67338 16.49204,14.90392 31.9068,31.09632 47.22477,47.22476",
# "m 158.49777,959.77438 c -128.157212,0.34389 -256.31662,-0.59613 -384.47478,-0.94157 -27.09642,-0.073 -55.88507,2.78195 -81.28895,-0.31386 -3.78481,-0.46123 -5.29043,-6.62971 -6.27714,-10.35728 -0.89643,-3.38652 -1.02614,-7.95965 0.62771,-10.98499 2.63553,-4.82109 8.36009,-8.18601 12.24042,-12.55428 13.59104,-15.3001 27.97785,-30.3067 40.17369,-46.45083 2.3462,-3.10576 3.20343,-7.46424 3.45243,-11.29885 0.2741,-4.22106 -0.45075,-8.78925 -1.88314,-12.86814 -9.55261,-27.20219 -21.83383,-53.68481 -31.07184,-80.97509 -2.16546,-6.39703 -3.09779,-13.35798 -3.13857,-20.08685 -0.0638,-10.53326 1.57459,-21.16664 2.82471,-31.69955 3.66697,-30.89621 7.90467,-61.73123 11.92657,-92.5878 8.74161,-67.0668 17.3182,-134.15638 26.36398,-201.18232 8.32097,-61.65542 17.05469,-123.25591 25.73627,-184.86175 2.19879,-15.60297 3.80988,-31.36183 6.90485,-46.76468 1.40365,-6.98561 2.70475,-15.11287 6.591,-20.40071 2.49551,-3.39554 8.18538,-4.39399 12.55428,-5.64942 4.73295,-1.36004 9.90746,-2.6455 14.75128,-2.197 6.45503,0.59769 13.11469,2.74348 19.14527,5.33557 5.89598,2.53424 11.70381,5.94271 16.63442,10.04342 5.6359,4.68729 10.64805,10.41609 15.06513,16.32056 5.83558,7.80062 10.00732,16.85641 15.69285,24.7947 5.40408,7.54532 11.10003,15.00593 17.57599,21.65613 16.854079,17.30755 34.437832,34.03847 52.414114,50.21712 18.640364,16.77633 37.121536,34.39751 57.4358239,48.64783 7.7236011,5.41805 17.6851621,7.18618 26.6778421,10.35728 10.884928,3.83837 22.513767,6.04616 32.95498,10.67113 5.147016,2.27989 10.008967,5.92215 13.809707,10.04343 4.882636,5.29443 8.929245,11.75262 12.240421,18.2037 2.756725,5.37086 5.245653,11.31004 5.963282,17.26213 1.06089,8.79918 0.18552,18.04614 -0.627713,26.9917 -0.96529,10.61819 -3.600002,21.08749 -4.707855,31.69955 -0.879908,8.42859 -2.374557,17.16218 -1.255428,25.42242 1.07787,7.95571 3.822825,16.32004 7.846426,23.22541 3.7182,6.38124 9.71288,11.67238 15.37899,16.63442 12.0145,10.52157 24.69696,20.43321 37.66283,29.81641 26.78934,19.38702 54.75567,37.17741 81.60281,56.49426 16.04664,11.54576 32.7332,21.52098 47.54934,34.36734 3.28295,2.84648 6.87911,8.06151 7.84642,12.08349 1.02045,4.24292 -0.31413,10.79885 -2.35393,14.43742 -1.8311,3.26629 -6.64129,5.14214 -10.35728,6.90485 -4.44429,2.10819 -9.27949,2.94495 -14.12356,3.45242 -6.14092,0.64334 -15.08883,-0.25778 -21.34228,-0.94156 -98.99326,-10.82431 -195.477525,-23.54284 -294.397825,-32.32727 -9.464971,-0.84052 -19.230979,1.6776 -28.247126,4.394 -7.304415,2.20069 -14.545161,5.88446 -20.714559,10.35727 -6.38488,4.62904 -11.93502,10.76256 -16.94828,16.94828 -7.95949,9.82098 -14.88582,20.55986 -21.96998,31.07184 -2.6454,3.92544 -6.18291,7.96774 -7.21871,12.24042 -0.6381,2.63217 0.31065,6.67552 2.197,8.47414 2.61226,2.49076 7.30004,3.91294 11.29885,4.394 37.744163,4.54065 75.922379,7.58504 113.930072,10.67113 10.9539915,0.88943 21.9624734,1.24368 32.954981,1.25543 184.749617,0.19749 369.741217,1.19531 554.271397,-0.62771 6.08561,-0.0601 12.47366,-2.08232 17.57599,-5.02171 4.52261,-2.60542 8.95285,-6.9207 11.29885,-11.61271 3.82652,-7.65303 5.88465,-16.7757 7.21871,-25.42242 1.49065,-9.6616 2.23393,-19.83255 1.25542,-29.50255 -0.80001,-7.90599 -3.85186,-15.67988 -6.59099,-23.22541 -2.80568,-7.72885 -6.386,-15.2219 -10.04342,-22.59771 -2.61972,-5.28309 -5.2861,-10.66489 -8.788,-15.37899 -4.65838,-6.27089 -10.05934,-12.12718 -15.69285,-17.57599 -7.13,-6.89623 -14.3983,-13.94491 -22.5977,-19.45913 -9.69045,-6.51697 -20.18343,-12.34856 -31.07184,-16.63442 -18.61415,-7.32684 -38.32465,-12.03161 -57.43582,-18.2037 -7.77591,-2.51129 -16.07271,-4.06506 -23.22542,-7.84643 -9.27247,-4.90201 -18.09275,-11.30029 -26.05012,-18.2037 -7.8401,-6.80167 -15.31691,-14.5233 -21.34228,-22.91156 -4.64577,-6.46764 -7.82096,-14.158 -10.67113,-21.65613 -3.95007,-10.39171 -7.02964,-21.21369 -9.72957,-32.01341 -1.79869,-7.19474 -3.85577,-14.63191 -3.76628,-21.96998 0.11975,-9.81944 1.4505,-20.06919 4.39399,-29.50256 5.73988,-18.39529 13.98901,-36.18009 21.65613,-53.9834 10.85044,-25.19509 20.49466,-51.39189 33.89656,-75.01181 5.53414,-9.75353 14.29301,-17.94509 22.91155,-25.10856 7.49278,-6.22776 16.31219,-12.42204 25.42242,-15.06513 7.83805,-2.274 17.2541,-0.94852 25.42241,0.31386 3.33978,0.51615 6.44554,2.83245 9.10185,5.02171 6.86402,5.65716 14.38992,11.17648 19.45913,18.51756 29.24582,42.35294 56.45018,86.5505 83.48596,130.56449 60.42569,98.37245 119.20283,197.76786 178.89846,296.59483 24.73189,40.944 49.38834,81.93551 74.3841,122.71807 18.73497,30.56759 39.40604,60.3033 56.80811,91.33238 2.37092,4.22752 3.09386,9.77338 2.51086,14.43742 -0.67242,5.37939 -1.78491,12.7729 -6.27714,15.69285 -16.43156,10.68052 -37.21199,18.20147 -56.49425,25.10855 -8.75563,3.13634 -18.26824,4.90362 -27.61942,5.02172 -222.58911,2.81123 -445.46659,3.1686 -668.20146,3.76628 z",
# "M 2329.9462,1281.1143 C 2330.0806,1271.5231 2317.5452,1262.7481 2307.3472,1262.3709 C 2291.6605,1262.2466 2283.4689,1258.1134 2284.7179,1245.4518 C 2288.3897,1208.2277 2293.6278,1171.5592 2295.9269,1134.2085 C 2297.0174,1116.4916 2275.3091,1111.5066 2261.2405,1105.9907 C 2221.6386,1090.4641 2186.5161,1079.7776 2143.8836,1064.3258 C 2133.6757,1060.626 2121.7504,1057.543 2111.5818,1059.5404 C 2099.4183,1061.9297 2085.0802,1069.8917 2077.3103,1079.1777 C 2068.7299,1089.4323 2062.3072,1103.8541 2059.993,1117.7392 C 2058.3193,1127.7814 2062.4128,1141.0562 2067.0385,1149.2676 C 2077.7192,1168.2277 2096.364,1175.2696 2115.1709,1181.5695 C 2132.3552,1187.3259 2141.1218,1190.1012 2145.08,1200.7113 C 2156.8046,1232.1399 2165.9465,1262.5875 2178.7234,1298.514 C 2186.4173,1320.1482 2163.4599,1333.5693 2145.2728,1323.0058 C 2007.3999,1242.9258 1882.4781,1165.792 1744.2982,1081.0749 C 1726.0165,1069.8665 1705.5634,1059.9488 1684.48,1057.1476 C 1671.4118,1055.4113 1655.0148,1055.9765 1643.2356,1059.0572 C 1629.0936,1062.7559 1612.093,1072.044 1602.4866,1083.8305 C 1555.8639,1141.0343 1531.8451,1184.1043 1490.1985,1245.7253 C 1480.8763,1259.5185 1475.449,1277.1898 1477.5091,1292.8313 C 1482.7307,1332.4767 1466.2013,1360.6892 1439.6235,1362.2204 C 1395.7769,1364.7466 1366.8996,1361.1041 1326.3443,1359.8878 C 1299.4,1359.0797 1273.4507,1348.481 1249.4266,1335.6827 C 1202.6852,1310.7823 1160.9762,1286.3438 1117.4762,1257.6412 C 1105.9973,1250.0671 1095.97,1237.8806 1093.2711,1226.1853 C 1091.1846,1217.1436 1096.2559,1201.6562 1103.1198,1194.5843 C 1109.4159,1188.0974 1119.5875,1184.8453 1129.3673,1185.086 C 1199.3597,1186.8081 1260.4335,1185.9479 1332.2411,1182.7658 C 1347.1676,1182.1043 1368.2236,1170.8876 1379.2621,1161.1587 C 1391.7521,1150.1506 1401.8331,1139.5751 1408.7483,1124.3617 C 1413.7967,1113.2551 1417.6314,1099.1095 1415.999,1087.2744 C 1414.4411,1075.9798 1406.5319,1060.0631 1399.6003,1052.4347 C 1391.3824,1043.3907 1379.1656,1035.779 1366.2473,1035.6131 C 1277.0603,1034.4679 1191.1601,1034.2948 1102.6368,1036.882 C 1080.7176,1037.5196 1050.1891,1046.9804 1030.7699,1056.8698 C 1007.12,1068.9137 987.13644,1082.3411 969.19969,1101.4131 C 955.6322,1115.8393 945.79258,1136.2377 940.48696,1155.2495 C 936.22167,1170.5335 935.39003,1188.3555 937.94909,1204.3004 C 940.57428,1220.6573 946.83275,1232.6515 955.19373,1246.6562 C 962.78427,1259.3703 974.20343,1272.7349 987.49555,1279.381 C 1015.6774,1293.4719 1048.019,1302.7021 1077.0776,1316.0577 C 1114.2952,1333.1632 1123.9103,1353.7299 1123.458,1393.3258 C 1123.1837,1417.3404 1128.8077,1442.8524 1174.9743,1443.9961 C 1406.1222,1449.7223 1635.0306,1444.26 1866.3273,1444.7695 C 1997.13,1445.0576 2105.9339,1445.6366 2234.2018,1445.5428 C 2268.5181,1445.5171 2294.109,1423.8598 2306.4439,1409.4342 C 2317.6375,1396.3434 2325.9245,1374.4741 2326.7821,1356.649 C 2328.0402,1330.4979 2329.0308,1305.4386 2329.9462,1281.1143 z",
# "M 1928.5382,1606.2785 C 1826.8402,1604.7521 1723.809,1608.378 1623.4655,1600.2967 C 1604.9702,1598.8071 1585.9637,1588.8092 1572.0218,1577.5658 C 1561.2388,1568.8698 1554.5231,1553.7602 1549.2909,1540.4785 C 1544.1546,1527.4402 1541.1058,1512.6216 1540.9164,1498.6058 C 1540.707,1483.1113 1543.0261,1466.4615 1548.0945,1451.9476 C 1551.7995,1441.3379 1559.4872,1431.5511 1567.2364,1423.2349 C 1575.8375,1414.0044 1585.7132,1403.952 1597.1455,1399.3076 C 1611.2356,1393.5835 1628.1593,1392.7283 1643.8036,1392.1295 C 1693.5101,1390.2268 1766.8292,1420.573 1801.7236,1377.7731 C 1809.506,1368.2276 1812.8781,1353.5596 1813.6873,1340.6858 C 1817.2648,1283.7717 1819.8204,1212.0878 1812.4909,1175.5877 C 1805.1613,1139.0875 1777.6217,1124.6426 1758.6545,1120.555 C 1741.2202,1116.7977 1705.6394,1116.3907 1689.2655,1125.3404 C 1641.4346,1151.484 1596.6465,1187.0089 1552.88,1221.0495 C 1521.2756,1245.6307 1489.228,1271.692 1463.1527,1301.2058 C 1452.9383,1312.7672 1446.0583,1329.0653 1444.0109,1344.2749 C 1440.4753,1370.5393 1446.1934,1398.5062 1446.4036,1425.6276 C 1446.5922,1449.9498 1450.007,1475.6739 1445.2073,1498.6058 C 1442.8288,1509.9696 1433.9073,1521.5308 1424.8691,1528.5149 C 1416.3606,1535.0896 1403.3492,1540.1684 1392.5673,1539.2822 C 1374.2377,1537.7757 1356.1746,1523.3826 1337.5345,1521.3367 C 1323.474,1519.7935 1307.4391,1523.2294 1294.4655,1528.5149 C 1285.9045,1532.0027 1277.377,1539.5585 1272.9309,1547.6567 C 1266.2109,1559.8967 1260.4123,1575.6535 1260.9673,1589.5295 C 1261.6086,1605.5626 1265.3547,1627.2655 1276.52,1637.384 C 1290.8771,1650.3952 1316.5434,1654.2671 1337.5345,1658.9185 C 1386.7301,1669.8198 1436.9396,1678.179 1487.08,1684.0422 C 1535.839,1689.7439 1588.6777,1689.0555 1637.8218,1688.8276 C 1866.245,1687.7687 2093.9115,1693.1591 2318.5527,1688.8276 C 2339.5782,1688.4222 2352.3518,1674.4129 2366.4072,1658.9185 C 2385.9885,1637.3326 2395.0147,1605.1084 2396.3164,1576.3695 C 2397.0566,1560.0268 2394.5624,1542.5867 2389.1382,1527.3185 C 2383.7951,1512.2788 2373.9066,1498.1868 2364.0145,1485.4458 C 2323.5373,1433.3112 2301.7775,1434.9403 2244.3782,1417.2531 C 2227.4587,1412.0395 2192.3436,1400.2013 2184.56,1386.1476 C 2177.9872,1374.2801 2179.2645,1347.344 2180.9709,1332.3113 C 2187.639,1273.5682 2201.4957,1214.9162 2206.0945,1156.4458 C 2207.0787,1143.9319 2206.3623,1128.1289 2197.72,1119.3585 C 2152.526,1073.4949 2098.6906,1026.9166 2044.5855,992.544 C 2030.8966,983.84754 2008.759,984.92636 1994.3382,990.15127 C 1981.2426,994.89606 1963.5934,1007.7281 1962.0364,1022.4531 C 1949.6359,1139.7269 1950.9879,1266.0902 1952.4655,1386.1476 C 1952.583,1395.6963 1960.1909,1404.8476 1966.8218,1411.2713 C 1972.9521,1417.21 1982.1698,1420.8591 1990.7491,1423.2349 C 2085.8547,1449.5718 2184.0851,1469.1988 2277.8764,1497.4095 C 2286.1748,1499.9055 2292.6167,1508.0755 2297.0182,1515.3549 C 2302.9852,1525.2234 2308.3319,1537.5882 2308.9818,1548.8531 C 2309.5283,1558.3251 2304.8443,1568.6883 2300.6073,1577.5658 C 2296.4698,1586.2349 2291.0518,1595.6074 2283.8582,1601.4931 C 2277.8918,1606.3747 2269.1679,1609.7593 2261.1273,1609.8676 C 2150.7279,1611.3544 2039.3941,1607.9424 1928.5382,1606.2785 z",
# "m 1249.0036,1023.6494 c -96.1061,-0.6697 -181.092,1.1582 -276.37821,-0.4497 -9.20299,-0.1553 -15.99536,-5.7889 -19.82106,-13.0882 -1.59465,-3.0425 -3.73133,-10.14768 -2.6176,-17.94991 0.75661,-5.3004 8.95292,-14.60894 13.38489,-18.17034 17.90015,-14.38405 28.03372,-23.76958 48.08398,-35.29273 14.6443,-8.41624 25.7279,-16.00767 41.8054,-21.08477 14.2304,-4.49381 35.2699,-9.05202 50.2382,-9.49443 65.9856,-1.95031 119.1026,-0.45118 184.7844,-2.90986 8.8915,-0.33284 22.6503,-1.84869 29.9765,-6.21127 6.4019,-3.8122 16.569,-13.42473 19.0653,-28.63625 1.5284,-9.31363 -0.4669,-22.87846 -4.3357,-28.78921 -9.0287,-13.79424 -15.5154,-18.54994 -23.1715,-22.50146 -29.4312,-15.19025 -67.4166,-22.31072 -95.1829,-39.03022 -9.321,-5.61262 -12.2985,-17.58624 -14.2844,-26.17159 -7.1979,-31.1179 -5.6551,-28.3884 -9.7189,-50.70919 -5.8627,-29.69674 -7.5413,-38.57357 -13.012,-62.34718 -15.5854,-67.5368 -29.6477,-136.05043 -42.4709,-204.57818 -4.3097,-23.03122 2.7002,-50.15102 -1.7945,-71.78181 -1.8859,-9.07588 -9.5404,-14.33842 -17.3473,-20.33819 -35.2622,-27.09963 -76.3507,-48.61983 -108.8691,-77.76364 -9.75317,-8.74104 -15.94658,-23.45338 -17.94547,-35.89091 -1.5902,-9.89459 1.77976,-22.54245 7.17818,-31.10545 6.16649,-9.78124 16.74989,-19.21691 27.51639,-23.92727 14.7559,-6.4557 32.558,-10.39555 49.0509,-9.57091 55.2889,2.76445 112.2509,10.38278 166.2945,20.33818 6.5721,1.21066 12.9584,7.57214 15.5528,13.16 2.5899,5.5782 -1.004,13.712 0,20.33818 0.99,6.53382 1.4173,10.0323 6.3551,14.28901 29.7567,25.65238 67.1574,52.10626 101.4614,71.70533 7.3261,4.18562 21.1063,5.84498 27.3817,4.86194 11.4657,-1.79609 50.3614,-31.47019 74.6152,-41.57592 9.2444,-3.85184 22.4955,-2.36198 31.1054,1.94296 10.5319,5.26597 20.5134,19.3781 27.0666,30.12941 18.9693,31.12142 29.5534,68.69467 50.2473,98.10182 9.614,13.66194 25.2851,24.22322 40.6763,31.10545 33.6597,15.05111 74.4902,18.2613 106.4764,34.69455 11.4817,5.89887 23.6768,19.19213 23.9273,32.30182 2.1422,112.1097 -3.8553,214.5369 -12.6429,329.9178 -0.6925,9.09322 -4.8554,20.99604 -16.1645,19.87928 -29.8914,-2.95174 -74.2122,-8.23567 -105.1853,-11.22618 -26.8511,-2.59252 -51.5462,-3.43664 -76.8733,1.19637 -7.3735,1.34881 -15.0182,8.09858 -18.9934,14.65774 -4.0005,6.60084 -4.4852,18.27376 -3.1393,25.19555 1.4457,7.43457 6.5759,15.44592 13.0116,20.71148 6.7243,5.50171 13.8232,9.68042 22.5871,10.02069 44.4751,1.72677 67.979,-1.3799 110.0655,-0.59819 8.9239,0.16575 28.8602,2.86243 38.36,12.18853 14.4796,14.21473 19.1124,22.57583 21.9079,34.61806 2.3887,10.28989 -0.286,23.04361 -5.2352,32.75159 -5.4193,10.63018 -14.8607,21.43452 -25.1237,27.51632 -11.2715,6.6794 -26.7869,7.5789 -40.3841,7.556 -132.361,-0.2229 -264.6869,2.9403 -397.485,2.0149 z",
# "m -14.25933,690.50898 c -7.58137,-0.1759 -14.538909,-7.62549 -18.71537,-13.36812 -2.953203,-4.06065 -3.313256,-10.92468 -2.673624,-16.04174 0.548645,-4.38916 2.903377,-9.29518 6.238457,-12.47692 22.5099547,-21.47502 46.774634,-42.06082 71.296648,-61.49336 6.967339,-5.52129 14.56658,-11.13552 23.17141,-13.36812 101.310839,-26.28605 205.624359,-45.62174 306.575589,-72.18785 6.29081,-1.65548 11.87123,-7.08949 15.15053,-12.47692 5.03864,-8.27776 7.33469,-18.78533 9.80329,-28.51865 7.92883,-31.26225 11.67067,-64.01728 21.389,-94.46806 3.64979,-11.436 10.99271,-22.00499 18.71537,-31.19229 9.50736,-11.31048 20.85702,-21.81869 32.9747,-30.30107 11.64786,-8.1535 24.77619,-15.88522 38.32194,-19.60658 13.48756,-3.70537 28.9708,-4.99633 42.77799,-2.67362 17.97924,3.02454 37.19743,9.24839 52.58128,18.71537 11.64946,7.1689 21.31645,19.46776 28.51866,31.19228 5.57177,9.07033 9.64292,20.3939 9.80329,31.19228 0.73084,49.20963 -10.20506,94.61466 -6.163,141.0984 0.71105,8.17702 12.86011,17.48259 20.74456,18.37277 10.53385,1.18931 24.88268,-2.03848 35.47702,-6.65652 12.57707,-5.48231 29.89227,-17.71084 38.2261,-28.4779 32.36467,-41.81421 50.6762,-83.78382 81.93607,-127.01037 6.76501,-9.35473 17.29499,-16.13106 27.62745,-21.389 39.87226,-20.29003 80.87584,-40.61636 122.98671,-55.2549 20.27369,-7.04752 42.59786,-9.51474 64.16696,-9.80329 67.2546,-0.89973 135.1488,2.86664 202.3043,6.23846 3.8441,0.19301 7.8689,2.55994 9.7831,5.36742 2.5418,3.72805 3.0057,9.75169 1.0787,14.01131 -3.7174,8.21729 -12.9081,13.96837 -17.1003,22.50805 -3.8287,7.79913 -5.6125,17.4232 -2.1775,23.5464 3.3976,6.05664 14.3881,9.64917 22.6753,12.99313 8.6457,3.48863 16.2291,6.73811 22.6552,12.74511 7.2391,6.76699 12.9636,16.36108 16.2898,26.26038 9.1508,27.23437 19.315,53.67403 21.753,81.15668 0.8298,9.35395 -3.7366,21.67428 -9.8991,28.66958 -4.829,5.48162 -13.8344,8.3415 -21.1422,8.43894 -14.9724,0.19963 -30.0971,-5.49906 -45.6985,-7.54773 -13.8084,-1.81323 -28.712,-3.31667 -41.8867,-0.49352 -11.7791,2.5241 -24.0472,8.3774 -32.9747,16.53527 -8.3025,7.5868 -15.0031,18.68548 -18.7154,29.40987 -4.3086,12.44702 -5.4797,27.02276 -2.4473,38.81547 2.3148,9.00215 9.6069,18.08183 18.8112,18.41352 23.7704,0.85659 51.0812,-10.33484 77.2129,-12.59313 21.9936,-1.90068 45.5023,0.11411 65.5518,7.52735 15.3018,5.65781 29.3181,16.60268 35.9909,31.04136 3.9923,8.63859 4.9501,22.72536 1.6314,31.68581 -2.6227,7.0813 -5.6934,11.3901 -13.6556,14.18387 -8.9707,3.14762 -25.0452,3.30897 -34.8876,3.31807 -311.5866,0.28797 -742.00699,3.31575 -929.39952,4.66204 -146.21898,1.05048 -287.273277,0.98378 -366.68421,-0.69953 l 0,0 0,0 z",
# "M 121.17425,102.34848 C 154.66271,98.743549 174.11617,124.09091 174.11617,124.09091 C 174.11617,124.09091 290.20833,277.87876 298.0303,287.42424 C 298.0303,287.42424 303.06818,294.58334 303.33333,298.56061 C 303.46591,305.1894 316.59091,314.4697 316.59091,314.4697 C 340.98485,328.25758 350.66288,335.01894 353.71212,338.33333 C 359.67803,344.03409 364.05303,355.96591 364.05303,355.96591 C 374.75242,370.83418 374.19303,382.44303 372.55816,386.25774 C 370.83467,390.23501 350.46401,400.04735 340.05681,400.37879 L 172.87879,399.71591 C 153.39015,400.11364 133.63636,381.42045 129.92424,364.31818 L 121.96969,304.79167 C 120.77651,295.77652 124.09091,282.38637 137.87879,282.25379 L 231.875,279.73485 C 238.90151,280 239.81439,276.00758 236.76515,272.16288 L 202.95833,224.71591 C 200.04167,220.20833 193.42803,219.67803 189.98106,223.39015 C 189.98106,223.39015 147.82197,256.53409 144.24242,257.46212 C 132.62869,261.77528 123.69318,255.60606 120.64394,245.53031 C 120.64394,245.53031 98.238637,157.5 97.443182,147.02652 C 94.261364,110.03788 114.81061,103.27651 121.17425,102.34848 z",
# "m 1853.401,1872.883 c -46.8552,-10.0739 -96.2247,-20.4906 -139.6179,-32.2164 -31.0659,-8.3947 -60.9629,-21.4601 -88.6754,-37.4451 -14.0326,-8.0942 -26.1958,-17.8743 -39.5743,-29.4514 -16.7768,-14.5179 -31.0838,-39.2562 -34.6869,-57.0683 -2.5006,-12.3623 -3.2574,-25.9721 -0.3012,-38.3558 2.1794,-9.1298 6.7897,-26.0508 11.9707,-38.3557 9.548,-22.6765 22.1699,-44.6331 33.4483,-65.9727 24.0855,-45.5717 70.35,-107.4284 129.1401,-179.1853 12.8163,-15.6431 33.6203,-16.7734 44.2206,-14.4546 9.0384,1.9772 22.4306,13.3672 26.3985,21.799 5.8514,12.4343 8.4932,31.7796 1.5196,44.1871 -23.3281,41.5058 -55.0784,80.7861 -77.026,121.2065 -12.5066,23.0331 -16.2086,49.5553 -21.7789,75.1784 -3.6354,16.7228 -7.7912,41.1644 1.5532,53.0914 11.6264,14.8398 31.2041,22.0238 50.6277,30.6565 46.8571,20.8254 105.2911,49.0274 156.2215,57.7177 53.3275,9.0993 93.1359,17.7597 146.0182,22.6894 19.5354,1.8211 41.2521,-0.2395 59.2242,-7.0565 17.6231,-6.6846 33.8592,-15.5494 46.3294,-29.4447 9.0097,-10.0393 14.7398,-26.071 15.0304,-39.2796 0.2838,-12.9055 -5.1417,-38.2024 -13.5106,-48.5188 -58.7587,-72.4324 -109.5788,-135.8103 -164.7442,-201.8614 -16.2168,-19.4169 -174.458,-329.6473 -272.022,-525.20059 -24.2422,-48.59009 -14.2114,-92.91614 -5.7018,-124.96911 5.9931,-22.57421 26.9033,-47.38089 45.5911,-61.30919 87.2391,-65.02047 154.5462,-112.90287 243.5592,-174.58867 31.9918,-22.17027 54.3891,-22.6253 77.3236,-13.48604 37.7883,15.05845 46.0728,20.98935 83.6555,37.4129 18.6497,8.14988 36.0804,20.94066 48.0308,39.82097 29.8785,47.20476 45.4466,73.48762 72.7024,122.94465 23.8733,43.31944 23.4142,54.00671 29.7999,103.12775 1.5925,12.24994 4.2152,49.79771 4.5071,69.6889 0.1886,12.8504 -2.5358,28.71175 -21.4871,50.71563 -29.4534,34.2793 -51.199,58.9609 -79.1903,83.4885 -42.3918,33.5607 -77.6987,66.7412 -117.8472,102.6811 -11.1446,9.9764 -21.2679,23.4187 -23.6334,38.0411 -1.8479,11.4232 1.5016,24.9866 8.0005,35.584 15.0076,24.4717 31.0098,49.8653 47.2334,74.8837 79.2158,122.1584 152.1415,240.7896 232.5713,361.7584 12.8138,19.2723 16.0908,53.9391 7.3645,74.2745 -7.6957,17.9339 -16.9642,37.7784 -31.2924,51.8596 -21.267,20.9003 -46.0405,38.9506 -72.4132,53.3928 -25.1789,13.7884 -51.0956,24.454 -79.1619,30.0673 -36.3732,7.2746 -75.6253,6.0201 -112.6169,1.821 -76.5447,-8.6889 -150.8733,-23.5532 -226.7601,-39.8689 z",
# "m 831.09323,514.41135 c -69.10813,39.23169 -138.2367,78.43305 -207.14559,118.01022 -18.34334,10.53532 -36.10502,22.10842 -54.61111,32.32727 -12.56575,6.93866 -25.49836,13.28302 -38.60441,19.14527 -23.61522,10.56293 -47.51523,20.57125 -71.55939,30.13027 -18.84963,7.49388 -37.86549,14.69162 -57.12196,21.02842 -13.48927,4.43896 -27.30115,7.9855 -41.11527,11.29885 -14.53763,3.48688 -29.19761,6.65406 -43.93997,9.10185 -12.98167,2.15545 -26.11147,3.81071 -39.23212,4.70785 -11.36019,0.77676 -22.91251,1.31564 -34.21041,0.31386 -9.93976,-0.88136 -20.18481,-2.41524 -29.50255,-5.96328 -20.08019,-7.64619 -39.38232,-17.9013 -58.69125,-27.61942 -28.29271,-14.23963 -55.774002,-30.31782 -84.11367,-44.25383 -3.359887,-1.65222 -7.293752,-2.28714 -10.984994,-2.51085 -3.213611,-0.19476 -6.728995,0.15522 -9.729565,1.25543 -3.276569,1.20141 -6.520228,3.21393 -9.101852,5.64942 -8.507989,8.0264 -15.633513,17.78843 -24.166986,25.73627 -2.137663,1.99096 -5.069203,3.20069 -7.8464242,4.08014 -3.4999176,1.10831 -7.3177611,1.82921 -10.9849936,1.88314 -3.4468588,0.0507 -7.1994035,-0.10626 -10.3572802,-1.56928 -38.166622,-17.68226 -75.669353,-37.39959 -113.616215,-55.86654 -13.00258,-6.32775 -25.85238,-13.16567 -39.23212,-18.51756 -7.02097,-2.80839 -14.57527,-4.28714 -21.96999,-5.96328 -8.29813,-1.88091 -16.66492,-3.81383 -25.10856,-4.70786 -9.34158,-0.98911 -18.84422,-0.40004 -28.24712,-0.94157 -10.57932,-0.60928 -21.25516,-0.89574 -31.69956,-2.51085 -9.85169,-1.52346 -19.78959,-3.66189 -29.1887,-6.90486 -8.49074,-2.92955 -16.76394,-7.03276 -24.48084,-11.61271 -5.15124,-3.05724 -10.27885,-6.76758 -14.12356,-11.29885 -4.94328,-5.82601 -9.35039,-12.72132 -12.24042,-19.77298 -2.34092,-5.71185 -3.13108,-12.30485 -3.45243,-18.51756 -0.30637,-5.92309 0.50439,-12.03292 1.56929,-17.88985 0.81825,-4.50035 2.31838,-8.95375 4.08014,-13.18199 1.8999,-4.55976 4.05109,-9.17672 6.90485,-13.182 3.10952,-4.36424 6.93272,-8.40056 10.98499,-11.92656 4.00339,-3.48347 8.44012,-6.75536 13.18199,-9.10185 5.40617,-2.67522 11.34911,-4.72926 17.26214,-5.96328 6.11816,-1.27683 12.55358,-1.56929 18.83142,-1.56929 6.48568,0 13.00209,0.78662 19.45913,1.56929 10.80509,1.30971 21.58354,2.94396 32.32726,4.70785 10.28469,1.68853 20.56101,3.50269 30.75799,5.64942 9.68063,2.03803 19.29014,4.44596 28.87484,6.90486 10.39752,2.66743 20.80823,5.35043 31.07184,8.47414 6.58005,2.00262 13.03147,4.44722 19.45913,6.90485 11.35757,4.3426 22.563172,9.08579 33.896549,13.49585 13.67056,5.31951 27.260054,10.89301 41.115262,15.69285 15.438109,5.3482 31.04013,10.3751 46.7646868,14.75127 6.4546682,1.79635 13.1567452,3.54575 19.7729882,3.76629 5.938036,0.19793 12.325896,-0.55023 17.889847,-2.51086 5.421043,-1.91027 10.682946,-5.34569 15.065134,-9.10185 3.673474,-3.14869 6.657056,-7.39934 9.101852,-11.61271 2.472296,-4.26077 4.373409,-9.05364 5.649425,-13.8097 1.025602,-3.8227 1.647294,-8.0079 1.255428,-11.92657 -0.549704,-5.49704 -1.857088,-11.2462 -4.08014,-16.32056 -2.589422,-5.91064 -6.415023,-11.45448 -10.35728,-16.63442 -5.054976,-6.642 -10.629243,-13.0281 -16.634419,-18.83142 -6.444484,-6.22786 -13.562822,-11.83873 -20.714559,-17.26213 -5.402542,-4.09693 -10.9513232,-8.18415 -16.9482762,-11.29885 -7.4988963,-3.89478 -15.5420968,-6.90704 -23.5392718,-9.72957 -9.788052,-3.45461 -19.792084,-6.38168 -29.816411,-9.10185 -10.794851,-2.92926 -21.6758,-5.67745 -32.641124,-7.84642 -8.075331,-1.59732 -16.310361,-2.37694 -24.480841,-3.45243 -45.08058,-5.93399 -90.14347,-12.02736 -135.27235,-17.57599 -44.21574,-5.43636 -88.76769,-9.33106 -132.7615,-15.37899 -3.18936,-0.43845 -6.28741,-2.1648 -8.78799,-4.08014 -2.41651,-1.85095 -4.41938,-4.55681 -5.96328,-7.21871 -1.49005,-2.56905 -3.20723,-5.52182 -3.13857,-8.47414 0.2452,-10.54353 1.72568,-21.63908 4.08014,-32.01341 0.99335,-4.37694 3.12866,-8.90557 5.96328,-12.24042 2.50095,-2.94229 6.38346,-5.18718 10.04342,-6.591 3.97723,-1.52551 8.5248,-2.08807 12.86814,-2.19699 29.03011,-0.72803 58.17159,-0.40225 87.25223,-0.31386 5.33901,0.0162 10.70525,-0.003 16.00671,0.62771 104.6531,12.44685 209.242019,25.70346 313.856958,38.60441 82.025332,10.11523 163.991572,20.97424 246.063862,30.44412 7.6908,0.8874 15.52986,1.08715 23.22541,0.62772 6.32339,-0.37752 12.85488,-1.22608 18.83142,-3.13857 4.48536,-1.43532 8.72202,-4.13384 12.55428,-6.90486 2.96798,-2.14608 5.75458,-4.85808 7.84642,-7.84642 2.30216,-3.2888 4.05581,-7.1457 5.33557,-10.98499 1.85881,-5.57642 2.00163,-11.79862 4.08014,-17.26214 1.58315,-4.16143 4.28392,-7.97914 6.90485,-11.6127 1.98231,-2.7482 4.28781,-5.38424 6.90486,-7.53257 4.39242,-3.60572 8.95627,-7.40429 14.12356,-9.72957 9.47937,-4.26572 19.6845,-7.34619 29.81641,-10.04342 81.82818,-21.78361 163.87994,-43.31841 246.06386,-63.39911 5.59141,-1.3662 11.5342,-1.16842 17.26213,-0.94157 4.83859,0.19163 9.91208,0.65176 14.43742,2.197 4.05342,1.3841 8.13496,3.70223 11.29885,6.591 4.05482,3.70223 7.25455,8.55511 10.35728,13.18199 2.86055,4.26573 5.55416,8.78259 7.53257,13.49585 1.57864,3.76088 2.8304,7.87632 3.13857,11.92657 0.42416,5.57469 -0.25077,11.3406 -0.94157,16.94827 -1.08772,8.82975 -3.03458,17.56014 -4.394,26.36399 -0.83758,5.42434 -1.89616,10.85526 -2.197,16.32056 -0.32687,5.93817 -0.52974,12.04091 0.31386,17.88984 0.72569,5.03144 2.27277,10.13763 4.39399,14.75128 2.06354,4.48821 4.75033,9.00608 8.16029,12.55428 4.33185,4.50746 9.49289,8.82659 15.06513,11.61271 5.93585,2.96793 12.83786,4.62287 19.45913,5.64942 6.87458,1.06583 14.09451,1.32989 21.02842,0.62772 9.59589,-0.97174 19.20023,-3.10893 28.56098,-5.64943 40.75174,-11.05997 81.08784,-23.93089 121.7765,-35.15198 2.93746,-0.81009 6.19207,-1.40921 9.10185,-0.94157 2.94888,0.47393 6.60689,1.52558 8.47414,3.76628 3.3637,4.03644 5.40744,9.81554 7.21871,15.06514 4.36125,12.64025 8.32224,25.62308 11.29885,38.6044 0.78967,3.44386 0.88006,7.38557 0,10.67114 -0.68922,2.57309 -2.32151,5.49213 -4.70785,6.90485 -49.92315,29.5545 -101.54002,57.22616 -152.22063,85.99681 z"]


# "m 72.939722,167.8463 c 3.806956,-28.02696 8.069064,-47.75283 13.517584,-75.652085 1.692601,-8.667155 9.072892,-17.13844 13.090403,-20.144181 6.527641,-4.883726 19.954241,-10.439817 28.126081,-11.702702 23.71895,-3.665601 41.53378,-3.233064 65.74941,-2.189447 20.86553,0.899261 43.05444,4.222531 64.3058,9.213712 17.73927,4.166344 36.76627,10.718121 55.01788,11.906482 13.84695,0.901582 26.00987,-2.757569 38.68207,-7.2208 5.06184,-1.782852 14.14554,-2.12006 21.40583,3.307467 7.67879,5.740392 15.92535,11.850932 24.37431,16.966601 7.58031,4.589712 15.89513,9.058643 24.24367,10.386893 8.55549,1.36118 16.38453,-1.69358 25.04924,-4.147606 6.501,-1.841162 10.8191,-7.079763 20.01002,-6.758422 8.22659,0.287582 13.8752,2.3478 19.44035,5.723968 5.05888,3.06904 9.36364,7.78984 11.75115,13.51731 4.77738,11.46068 5.90183,24.71073 11.35779,35.82276 5.02163,10.22734 13.07533,19.50667 21.71737,27.23977 49.27816,44.09521 99.76647,88.36342 148.86235,133.87996 25.7016,23.82787 50.04521,48.06856 72.62093,74.23939 5.49555,6.37073 9.92359,16.20822 10.16738,24.24845 0.24183,7.97524 -3.39681,17.49438 -8.0922,24.04701 -4.70464,6.56565 -12.42123,11.32619 -20.19812,14.19354 -13.85535,5.10851 -34.20378,3.47445 -47.39289,10.62527 -29.90382,16.21306 -57.32606,29.98091 -90.215,45.80254 -8.37836,4.03048 -7.80005,10.30532 -6.06987,13.50128 2.91566,5.38574 7.93843,10.85806 8.07999,16.28212 0.20139,7.71677 -2.57287,16.64422 -9.1552,23.01158 -6.31517,6.10891 -15.70085,11.19328 -24.72887,12.14666 -9.30525,0.98271 -20.7843,-1.00626 -28.87967,-5.77808 -10.46944,-6.1713 -18.69255,-17.30495 -26.81476,-27.05121 C 468.43016,484.627 432.03829,443.4997 388.47387,397.88765 375.68899,384.50185 390.06522,362.91973 394.6428,356.6965 397.49048,352.82507 417.00166,318.10573 420,300 422.8601,282.72906 409.26025,255.10368 394.30631,235.18225 379.85553,215.93114 368.27293,205.77978 370,200 c 1.72707,-5.77978 0,-10 30,-10 32.43813,-1.16826 40,-10 20,-30 -40,-30 -55.61775,-33.05125 -81.46647,-14.72388 -119.80735,84.93431 -132.78441,88.64123 -207.66887,157.65022 -5.37864,2.40329 -8.87196,10.14314 -7.84779,15.19752 1.07962,5.32807 6.62822,11.04035 12.74199,13.22344 8.66104,3.0926 18.77177,6.51766 27.26687,9.95345 4.92178,1.99093 8.93277,8.21651 10.27234,13.23836 1.51006,5.66099 1.06439,13.71827 -1.72331,18.81012 -2.9479,5.3845 -9.74717,9.93949 -15.57174,10.60727 -7.58026,0.86909 -16.67567,-4.05664 -23.27329,-9.39759 C 114.5755,359.86295 95.820955,345.72954 81.41477,327.62483 72.222593,316.07271 58.495004,296.8268 59.280654,282.36399 61.374111,243.8284 67.480691,208.03625 72.939746,167.84625 z",
# "M 572.49439,548.14177 C 412.6895,548.07047 257.58351,546.08102 98.354271,546.11584 C 83.562281,546.11894 75.35789,539.98731 69.884094,533.70258 C 65.691006,528.88829 64.472124,519.6039 65.764526,512.81879 C 67.336386,504.56653 72.119319,497.37906 76.981426,490.0859 C 85.0085,478.04529 93.498602,467.56029 100.24479,454.81748 C 112.83237,431.04095 123.08705,405.39513 131.39364,379.6306 C 144.21098,339.87513 153.03933,301.39697 164.51387,262.74385 C 170.44763,242.75541 192.89028,239.22481 208.32051,236.54414 C 277.38601,224.54547 342.70446,217.39564 413.21561,214.21946 C 422.18774,213.81531 435.89639,216.67719 441.0876,222.81225 C 447.71147,230.64047 452.6198,245.06967 451.05358,255.51112 C 449.3975,266.55164 441.59309,279.36654 432.31799,286.36088 C 419.75309,295.83605 402.93269,301.19636 386.72994,304.32146 C 342.22671,312.90499 305.60837,319.46692 263.04496,328.60436 C 254.00646,330.54473 240.48451,339.32425 235.22753,346.33355 C 229.74353,353.64556 226.00958,365.03899 226.63474,374.26011 C 227.44171,386.16292 233.07771,399.30907 241.01937,407.61171 C 248.83116,415.77858 260.388,425.63147 286.45689,419.48136 C 372.82117,399.03595 450.52332,382.89944 540.27144,362.44503 C 564.52321,356.91783 575.85275,359.65904 594.20774,364.47096 C 732.76986,400.79619 927.26238,451.08238 1101.3872,494.36915 C 1131.7777,501.9241 1144.1703,491.25992 1153.5685,479.5763 C 1160.8626,470.50838 1168.1461,452.54758 1166.8789,440.66424 C 1165.2471,425.36087 1162.3881,408.51065 1153.8676,395.49754 C 1142.6963,378.4359 1124.8199,360.08781 1101.8217,354.32816 C 974.23642,322.45066 838.31867,288.38267 732.05912,257.90385 C 690.5282,245.99137 688.86846,181.21945 724.30905,159.50816 C 759.97604,137.65818 802.80205,107.16062 845.6013,84.076745 C 859.97068,76.326587 879.12571,79.488067 901.16847,87.475865 C 929.92371,97.896114 960.8908,114.31282 984.94814,128.2916 C 1004.7708,139.80977 1026.8944,125.99264 1016.2607,105.43645 C 1004.0926,81.914156 1015.4723,56.868332 1055.8386,67.067998 C 1081.883,73.648845 1118.1443,106.02185 1138.5442,133.66209 C 1149.165,148.05234 1158.0857,163.40233 1162.338,180.26967 C 1168.8267,206.00823 1166.4591,245.8798 1176.4498,268.35888 C 1183.6447,284.54734 1193.3212,291.11243 1224.0639,291.18775 C 1252.5009,291.26098 1283.4094,282.80308 1311.474,289.94997 C 1341.0527,297.48242 1369.2589,314.63344 1387.1237,338.51578 C 1403.2721,360.1036 1408.8513,395.01837 1406.3352,422.17318 C 1403.3926,453.93086 1389.0941,490.8079 1365.0566,511.07881 C 1351.2732,522.70243 1314.5755,552.3397 1275.188,552.62813 C 1249.0614,552.82545 644.28144,548.17353 572.49439,548.14177 z",
# "m -1785.7292,792.86845 c -67.4631,47.6329 -136.8716,92.50853 -206.8599,136.34679 -10.3037,6.45387 -19.757,14.98157 -31.3516,18.63984 -4.0422,1.27539 -8.9373,2.93985 -12.6804,0.95103 -3.0093,-1.59895 -4.7806,-5.48102 -5.0722,-8.87629 -0.8187,-9.53376 7.0404,-21.07515 9.7848,-26.98746 18.7684,-40.4325 32.5731,-75.25655 52.3492,-111.10243 9.7931,-17.75091 20.0392,-35.44966 32.7158,-51.27062 18.5455,-23.14555 41.9063,-41.98211 62.7681,-63.06379 18.9528,-19.15258 37.8814,-38.3297 56.6921,-57.62194 13.0861,-13.42106 27.8076,-25.46016 39.0764,-40.4396 8.1158,-10.78821 12.3066,-24.14858 20.1823,-35.11326 5.8625,-8.16174 12.0461,-16.40465 19.9717,-22.58261 9.2179,-7.18533 20.1804,-12.05474 31.1401,-16.11486 14.2066,-5.26299 30.2284,-4.67101 44.2326,-10.45118 10.9909,-4.53647 20.3412,-11.6625 30.0033,-18.28029 17.0568,-11.68259 32.7571,-25.23249 49.2299,-37.72517 17.089,-12.95998 34.0853,-26.04969 51.461,-38.62259 13.3104,-9.63129 26.6578,-19.23313 40.4294,-28.19266 6.3654,-4.14118 12.7691,-8.25985 19.4855,-11.80332 10.1861,-5.37397 20.7582,-10.02659 31.458,-14.28671 28.2031,-11.22903 57.5917,-19.23915 86.1103,-29.64094 108.264,-39.48786 293.1142,-113.21099 322.5788,-124.36324 22.6881,-8.58731 44.78584,-19.5641 68.54911,-24.44216 4.97826,-1.02192 10.25088,-2.03266 15.2165,-0.95103 7.05353,1.53641 13.18102,5.45684 18.70361,9.82732 5.62536,4.4518 8.98322,10.71891 13.72938,15.85051 2.44332,2.64173 4.34429,5.40993 7.1933,7.29124 3.90756,2.58031 8.23097,3.99314 12.68041,4.75515 4.08707,0.69995 8.12389,0.25064 12.04639,-0.63402 13.47671,-3.03945 25.34866,-11.03439 38.31668,-15.79783 7.63492,-2.80447 15.21107,-6.06974 23.21569,-7.51304 6.25256,-1.12739 12.84477,-2.2351 19.04187,-0.83459 6.48144,1.46478 13.05132,4.55432 17.60471,9.35229 32.57422,34.32396 68.02275,76.28376 101.41094,114.96938 9.19604,10.6551 18.7466,21.03913 27.24162,32.26111 3.34682,4.42117 7.13555,8.68262 9.31992,13.77932 2.71702,6.33951 5.09616,13.35105 4.41688,20.21473 -0.54526,5.50943 -3.39367,10.7443 -6.65721,15.21649 -2.79802,3.83426 -6.5476,7.08539 -10.68316,9.41512 -4.23868,2.38782 -9.10345,3.73203 -13.92719,4.36421 -4.1389,0.54243 -8.47818,0.53765 -12.51128,-0.53882 -4.98042,-1.32932 -9.6397,-3.98067 -13.72664,-7.12211 -5.88512,-4.52362 -10.20033,-10.79654 -14.99469,-16.46328 -16.80602,-19.86403 -36.46855,-48.67955 -48.20682,-61.39464 -3.8937,-4.21773 -10.70563,-5.85072 -16.61115,-6.84762 -5.53122,-0.93371 -11.35495,-0.39092 -16.80155,0.95103 -10.48889,2.5843 -19.56952,9.16499 -29.50322,13.40964 -13.86635,5.92507 -27.95673,11.31293 -41.99323,16.8228 -15.83221,6.21476 -31.52489,12.83056 -47.62548,18.31266 -17.53362,5.97003 -35.38844,10.97628 -53.25773,15.85052 -33.16096,9.04537 -66.94416,15.70668 -100.08016,24.84326 -9.7944,2.7006 -19.8704,4.75196 -29.1649,8.85502 -7.09,3.1299 -13.9835,6.97978 -19.9818,11.88742 -5.0761,4.15307 -10.0042,8.8603 -13.2091,14.58247 -3.9907,7.1253 -5.5085,15.46241 -6.8902,23.51144 -1.2485,7.27362 -1.1231,14.7272 -1.2153,22.10663 -0.1087,8.70699 -0.2727,17.46774 0.7819,26.11131 1.2962,10.62416 3.285,21.26913 6.7839,31.38402 2.9508,8.53052 6.5939,17.01203 11.856,24.34601 3.5182,4.90342 8.2055,8.90703 12.881,12.72293 5.0928,4.15653 10.7589,7.57577 16.3893,10.96875 6.4793,3.90454 12.9479,7.96882 19.9717,10.77835 25.8772,10.35099 53.8898,14.26513 80.6685,21.99016 35.77334,10.31979 71.46774,20.95401 106.85272,32.53561 12.4506,4.07512 25.52589,6.84189 37.09021,12.99742 5.21868,2.77783 10.22039,6.24897 14.21279,10.60922 4.11526,4.49441 7.66833,9.777 9.60551,15.55476 2.00865,5.99092 2.42127,12.58714 1.77544,18.87274 -0.67802,6.59896 -3.13674,12.75078 -5.07216,19.02062 -3.29403,10.67111 -9.37446,20.57461 -11.11663,31.60584 -1.03499,6.55341 -0.95688,13.42418 0.49631,19.89771 1.54396,6.87791 4.43578,13.62044 8.55928,19.33763 1.83785,2.54817 4.42632,4.50198 6.97423,6.3402 16.6768,12.03165 35.0667,21.8406 53.77624,30.23245 25.09454,11.25573 53.03505,21.48818 74.86617,39.31943 5.17668,4.22822 9.8166,9.4941 12.68041,15.5335 2.49507,5.26178 3.93096,11.31213 3.48711,17.11856 -0.56373,7.37471 -3.87614,14.4746 -7.68218,20.81638 -14.20248,23.66475 -26.91889,43.25151 -43.85278,64.13123 -4.81571,5.9378 -10.91827,10.9691 -17.56218,14.7515 -5.85985,3.3361 -12.17858,5.5609 -18.70361,6.6785 -9.41546,1.6128 -18.9175,1.0666 -28.26659,-0.1054 -18.01915,-2.2588 -35.62573,-7.4797 -52.84459,-13.2506 -15.93641,-5.3411 -31.73219,-11.51717 -46.42122,-19.68592 -19.40702,-10.79248 -37.19441,-24.40485 -54.45184,-38.37952 -17.36931,-14.06527 -34.20019,-28.98774 -49.17914,-45.57554 -19.6266,-21.73462 -35.9563,-46.2591 -52.8558,-70.17575 -13.6581,-19.32944 -24.7379,-40.46589 -39.1928,-59.20698 -11.0578,-14.33677 -22.0725,-29.16913 -36.1918,-40.50338 -12.721,-10.21177 -28.0794,-16.66964 -42.6799,-23.94491 -15.2914,-7.61955 -30.8067,-14.95927 -46.9387,-20.58441 -26.3057,-9.17263 -53.357,-16.60149 -80.8164,-21.30347 -10.84,-1.85618 -21.9417,-3.78639 -32.8841,-2.68396 -10.9469,1.10289 -21.5093,5.04819 -31.701,9.1933 -17.1354,6.96924 -32.5314,17.62488 -48.9573,26.13257 -22.7858,11.80168 -44.9891,24.96619 -68.7912,34.55412 -11.7934,4.7506 -24.1638,7.95816 -36.4349,11.28575 -12.5672,3.40788 -25.3224,6.0876 -38.0413,8.87629 -41.2206,9.03784 -107.092,25.43683 -124.0139,25.45509 -3.4028,0.004 -8.8068,-3.63976 -10.7571,-7.56574 -1.3172,-2.65149 0.1623,-5.91969 0.317,-8.87629 0.321,-6.13503 2.8721,-12.45628 1.2681,-18.3866 -0.8341,-3.08385 -2.7788,-6.08362 -5.3892,-7.92525 -2.0524,-1.44794 -4.7881,-2.10965 -7.2912,-1.90207 -4.384,0.36355 -8.517,2.7635 -12.0464,5.38918 -24.1227,17.94583 -43.815,34.20182 -66.5093,50.22534 z",
# "m 222.2228,551.89246 95.86637,402.09942 c 5.26259,22.07326 10.80201,39.17756 21.97282,55.72832 4.45187,6.5959 10.10345,13.078 17.32144,16.4286 7.39298,3.4318 16.36684,4.5454 24.30357,2.6902 6.14916,-1.4373 12.77575,-6.5416 15.95476,-10.2151 11.09917,-12.8255 16.20963,-16.9964 25.93433,-26.32466 4.08925,-3.9225 9.94081,-6.7409 15.68743,-7.5662 8.12949,-1.1675 16.1691,1.531 23.22607,5.148 22.38774,11.47456 34.11879,21.40376 53.37598,25.91056 15.78549,3.6944 32.56694,2.5414 48.63456,0.3824 12.1795,-1.6365 24.28623,-4.9434 35.48161,-10.0111 12.58603,-5.6973 25.17868,-12.60926 34.77847,-22.54456 17.15365,-17.75323 27.12782,-36.76368 38.12646,-63.49168 4.06266,-9.87276 7.53483,-21.16812 10.03281,-30.41598 L 816.20143,396.28359 c 4.9418,-18.2952 -1.01535,-52.36818 -28.01924,-60.55319 -2.13561,-0.64731 -9.09544,-2.80698 -15.89286,-4.10714 l -47.86765,-9.15573 c -9.99185,-1.91116 -22.75889,-4.40117 -30.66044,-4.0892 -10.36306,0.40916 -16.70118,1.28624 -27.38271,4.21175 -11.2479,3.08063 -16.18949,5.75556 -25.60225,11.53843 -9.53493,5.85793 -23.02609,15.86498 -30.49981,26.81853 0,0 -100.83013,136.10368 -168.04441,228.12192 -5.80739,7.95048 -17.30624,20.63842 -26.9915,26.18701 -22.20368,12.72028 -73.91798,14.42051 -105.19125,-11.24692 -14.23472,-11.6831 -23.26024,-33.65849 -25.91818,-44.57647 -7.33749,-30.14016 -12.04546,-53.13897 -13.17628,-62.92661 -1.26917,-10.98523 -2.33595,-32.94324 0.43111,-43.64976 1.74746,-6.76142 5.81917,-13.05383 11.53318,-17.06888 5.28015,-3.71018 17.73777,-5.50903 26.57868,-0.27575 17.61143,10.42489 18.18663,14.03401 30.02846,21.88724 7.93802,5.26431 18.96125,5.78497 28.30357,3.92858 7.74307,-1.53861 14.89395,-6.35077 20.43148,-11.97734 4.37536,-4.44572 7.73276,-10.231 9.20495,-16.29242 1.77884,-7.32402 1.32809,-15.38035 -0.85325,-22.59474 -2.20649,-7.29755 -8.82743,-16.44516 -11.9448,-19.50453 -17.07819,-16.76047 -22.52682,-22.33031 -36.30267,-36.86312 -13.85469,-14.61598 -29.0077,-43.21147 -32.33757,-62.19374 l -6.0863,-34.69554 c -1.89157,-10.78304 -1.15577,-15.52243 0.0681,-20.18447 1.11228,-4.23705 3.82439,-8.30159 7.36059,-10.88714 3.80879,-2.78486 8.90649,-4.65823 13.57841,-3.99838 7.33481,1.03596 13.59162,5.85674 18.74539,11.93583 l 46.66631,55.04498 c 11.99105,14.14398 25.12825,24.63716 41.51884,29.48797 39.5011,11.69037 85.71748,-5.34643 109.5041,-43.52737 l 74.6954,-119.89683 c 4.93307,-7.91829 7.18592,-17.34823 3.68868,-25.5745 -2.8557,-6.71724 -10.47108,-12.80021 -15.93679,-15.21041 0,0 -20.06427,-9.07809 -29.20983,-12.63595 -15.33338,-5.965077 -28.61701,-11.067397 -44.97985,-16.092757 -7.30682,-2.24407 -15.08107,-2.881528 -22.7219,-3.089552 -8.11866,-0.221033 -16.27007,0.656222 -24.28572,1.964282 -19.79075,3.22963 -39.49882,6.33635 -58.64539,11.93891 -13.66163,3.997577 -26.79647,10.196877 -39.83675,15.382517 -12.35732,4.91406 -24.28272,10.90958 -35.98214,17.23215 -9.3041,5.02809 -14.74783,8.1364 -23.35479,14.28199 -10.91937,7.79672 -23.47195,19.28054 -31.90301,29.71792 -11.09249,13.73214 -23.92223,37.95064 -28.17838,55.08249 -18.17029,73.13902 -34.80949,141.74662 -41.38525,171.00688 -5.21063,23.1858 -12.29672,53.06052 -13.68873,76.65573 -1.35145,22.90781 -0.48547,46.48486 6.56382,76.0522 z",
# "M 618.73932,442.67676 C 557.84355,447.95952 497.12471,455.18557 436.25956,460.80389 C 392.39019,464.85337 347.19602,470.88813 304.53576,469.56533 C 295.23159,469.27683 285.70539,462.16744 280.06413,455.06363 C 274.82911,448.47139 274.23866,439.05134 274.02176,430.59201 C 273.83584,423.34116 277.51038,415.16137 282.17897,409.74581 C 287.58101,403.47944 293.1251,399.53884 303.32729,398.26529 C 319.321,396.26877 333.05062,407.13669 349.85358,411.55852 C 356.01165,413.17906 363.93942,413.33213 368.88707,410.65216 C 373.60723,408.09541 377.58282,402.98853 379.15911,397.35893 C 380.4026,392.9179 379.71628,383.34382 377.95063,378.92969 C 374.07673,369.24494 364.0042,360.61306 358.61502,351.43688 C 349.09968,335.23508 340.83243,324.46713 334.74764,307.32753 C 329.87885,293.61315 326.72612,278.4023 327.49679,263.82242 C 328.70526,240.95992 329.76302,216.60584 336.56035,194.93934 C 342.65342,175.51768 350.22077,155.47643 362.54257,139.04736 C 374.39027,123.25042 409.19862,93.396317 427.80023,87.082921 C 500.80829,62.303952 551.03858,45.19236 623.57322,17.293477 C 681.17167,-4.860523 736.73045,-33.200508 793.96823,-55.215037 C 799.57117,-57.370013 807.63511,-58.069594 812.09536,-55.215037 C 817.70574,-51.624393 822.74507,-43.278864 824.18011,-35.879433 C 835.63547,23.187275 842.41161,84.39986 854.6941,143.57914 C 860.13591,169.79878 867.35405,198.08514 884.60387,218.20249 C 896.70488,232.31511 906.96025,242.6068 923.57719,249.62284 C 943.21451,257.91415 964.62697,262.86 985.51155,261.10335 C 1007.7293,259.23457 1029.3691,252.71779 1046.5396,238.14233 C 1065.7879,221.80307 1079.054,197.70393 1104.5464,186.17789 C 1122.4302,178.09197 1147.3157,174.30118 1166.7829,178.92704 C 1188.0011,183.96898 1203.7448,191.81043 1218.4452,209.13892 C 1277.3388,278.56154 1331.5361,341.26815 1397.6016,416.99666 C 1402.6014,422.72781 1410.011,437.27039 1406.9673,443.88523 C 1395.0691,469.74337 1383.2604,497.54911 1372.8279,523.6446 C 1369.7643,531.30774 1356.1819,532.6812 1347.752,533.3124 C 1198.4394,544.4924 1060.9995,557.27625 916.93058,576.81751 C 909.53729,577.82032 898.99037,583.11162 897.59498,592.22557 C 896.07476,602.15477 906.41776,610.8233 912.70091,615.1866 C 935.42116,630.96455 963.52378,640.22557 981.28189,659.59806 C 994.5413,674.06288 1001.2031,698.00793 1001.5238,718.20911 C 1002.0088,748.76389 995.44434,781.36251 986.11579,811.2617 C 979.73416,831.71564 965.55831,852.62037 951.67424,866.24733 C 943.80575,873.9701 927.87604,878.51132 916.93059,875.00877 C 897.66416,868.84351 884.78377,852.29712 869.19581,837.84816 C 853.77525,823.55437 711.18768,701.89469 696.98809,693.13325 C 683.22349,684.64019 661.74089,681.45133 647.4406,684.97605 C 633.06729,688.51876 606.84913,703.24006 587.31896,713.37521 C 569.09615,722.83191 550.79724,732.21193 531.7291,733.31505 C 502.0554,735.03171 467.072,733.16658 441.09346,718.20911 C 419.28651,705.65349 402.46606,689.42029 390.3375,667.75527 C 383.35649,655.28522 380.22881,641.65197 385.5036,630.89678 C 389.16687,623.42743 399.13339,615.62931 408.46463,613.97813 C 685.0681,565.03264 949.19222,520.34582 1225.3939,466.24203 C 1236.5294,464.06075 1249.2981,447.67754 1251.9803,437.84286 C 1254.132,429.95324 1251.8009,419.26531 1247.1465,411.86064 C 1242.9387,405.16644 1237.6731,399.77868 1230.2278,397.35894 C 1221.5601,394.54195 1209.9545,395.39019 1200.3181,396.15046 C 1005.7221,411.5032 813.23467,425.80414 618.73932,442.67676 z",


def get_reverse_track(track):
    return Track(track.width, track.positions[::-1], -track.gradients[::-1])

def generate_tracks(track_width, env_width, env_height):
    tracks = list()

    for svg_track in svg_tracks:
        p = parse_path(svg_track)
        track = generate_track_from_svg_path(p, track_width, env_width, env_height)
        reverse_track = get_reverse_track(track)
        tracks.append(track)
        tracks.append(reverse_track)

    return tracks

def carToPolygon(car, car_length, car_width):
    car_vel = np.array([np.cos(car.car_heading), np.sin(car.car_heading)])
    car_vel_perp = util.perpendicular(car_vel)
    pert_vel = car_length/2*car_vel
    pert_vel_perp = car_width/2*car_vel_perp
    car_polygon = polygon.Polygon(
        [[car.pos[0] + pert_vel[0] - pert_vel_perp[0], car.pos[1] + pert_vel[1] - pert_vel_perp[1]],
         [car.pos[0] + pert_vel[0] + pert_vel_perp[0], car.pos[1] + pert_vel[1] + pert_vel_perp[1]],
         [car.pos[0] - pert_vel[0] + pert_vel_perp[0], car.pos[1] - pert_vel[1] + pert_vel_perp[1]],
         [car.pos[0] - pert_vel[0] - pert_vel_perp[0], car.pos[1] - pert_vel[1] - pert_vel_perp[1]]])
    return car_polygon

def sensorBeamToPolygon(car, angle):
    absolute_angle = car.car_heading - np.deg2rad(angle)
    sensor_direction = np.array([np.cos(absolute_angle), np.sin(absolute_angle)])
    sensor_direction_perp = 1*util.perpendicular(sensor_direction)
    sensor_direction *= 200
    sensor_polygon = polygon.Polygon(
        [[car.pos[0] + sensor_direction[0] - sensor_direction_perp[0], car.pos[1] + sensor_direction[1] - sensor_direction_perp[1]],
         [car.pos[0] + sensor_direction[0] + sensor_direction_perp[0], car.pos[1] + sensor_direction[1] + sensor_direction_perp[1]],
         [car.pos[0] + sensor_direction_perp[0], car.pos[1] + sensor_direction_perp[1]],
         [car.pos[0] - sensor_direction_perp[0], car.pos[1] - sensor_direction_perp[1]]])
    return sensor_polygon

# def sensor_distances_between_cars(cars, car_no, sensor_angles, car_length, car_width):
#     max_distance = 100
#     sensor_distances = max_distance*np.ones(len(sensor_angles))
#
#     cars_in_range = list()
#     for i in range(len(cars)):
#         if i == car_no:
#             continue
#         if np.linalg.norm(np.array(cars[car_no].pos) - np.array(cars[i].pos)) <= 100:
#             car_polygon = carToPolygon(cars[i], car_length, car_width)
#             cars_in_range.append(car_polygon)
#
#     # If yes, find the distance
#     if len(cars_in_range) != 0:
#         for a in range(len(sensor_angles)):
#             angle = sensor_angles[a]
#             sensor_distance = 0
#             car_pos = cars[car_no].pos
#             absolute_sensor_angle = cars[car_no].car_heading - np.deg2rad(angle)
#             sensor_direction = np.array([np.cos(absolute_sensor_angle), np.sin(absolute_sensor_angle)])
#             collision = False
#             for d in range(max_distance + 1):
#                 if collision == True:
#                     break
#                 p = car_pos + d * sensor_direction
#                 for car_polygon in cars_in_range:
#                     # Test whether point p (which is at distance i along the sensor beam) is inside of car polygon
#                     if car_polygon.collidepoint((p[0], p[1])):
#                         collision = True
#                         break
#             sensor_distances[a] = d
#
#     return sensor_distances

def sensor_distances_between_cars(cars, car_no, sensor_angles, car_length, car_width):
    max_distance = 100
    sensor_distances = max_distance*np.ones(len(sensor_angles))

    cars_in_range = list()
    for i in range(len(cars)):
        if i == car_no:
            continue
        if np.linalg.norm(np.array(cars[car_no].pos) - np.array(cars[i].pos)) <= max_distance:
            car_polygon = carToPolygon(cars[i], car_length, car_width)
            cars_in_range.append(car_polygon)

    if len(cars_in_range) != 0:
        for a in range(len(sensor_angles)):
            angle = sensor_angles[a]
            intersected_cars = list()

            # Check whether sensor beam intersects another car
            sensor_beam_polygon = sensorBeamToPolygon(cars[car_no], angle)
            for car_polygon in cars_in_range:
                if sensor_beam_polygon.collidepoly(car_polygon):
                    intersected_cars.append(car_polygon)

            # If yes, find the distance
            if len(intersected_cars) != 0:
                sensor_distance = 0
                car_pos = cars[car_no].pos
                absolute_sensor_angle = cars[car_no].car_heading - np.deg2rad(angle)
                sensor_direction = np.array([np.cos(absolute_sensor_angle), np.sin(absolute_sensor_angle)])
                collision = False
                for i in range(max_distance+1):
                    if collision == True:
                        break
                    p = car_pos+i*sensor_direction
                    for car_polygon in intersected_cars:
                        # Test whether point p (which is at distance i along the sensor beam) is inside of car polygon
                        if car_polygon.collidepoint((p[0], p[1])):
                            collision = True
                            break
                sensor_distances[a] = i

    return sensor_distances











































